/****************************************************************************
** Meta object code from reading C++ file 'main.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.8.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>
#include <QtCore/QList>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'main.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.8.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
struct qt_meta_tag_ZN12DxDiagWidgetE_t {};
} // unnamed namespace


#ifdef QT_MOC_HAS_STRINGDATA
static constexpr auto qt_meta_stringdata_ZN12DxDiagWidgetE = QtMocHelpers::stringData(
    "DxDiagWidget",
    "onGenerateClicked",
    "",
    "onWorkerStarted",
    "onWorkerFinished",
    "onWorkerError",
    "message",
    "onParsingFinished",
    "QList<DxDiagSectionData>",
    "sectionsData",
    "onWorkerThreadFinished",
    "onSearchRequirementsClicked",
    "onGameSearchStarted",
    "onGameSearchFinished",
    "onGameSearchError",
    "onGameSearchFinishedWithResults",
    "GameRequirements",
    "requirements",
    "onGameSearchThreadFinished",
    "onGameNameFound",
    "name",
    "performComparison"
);
#else  // !QT_MOC_HAS_STRINGDATA
#error "qtmochelpers.h not found or too old."
#endif // !QT_MOC_HAS_STRINGDATA

Q_CONSTINIT static const uint qt_meta_data_ZN12DxDiagWidgetE[] = {

 // content:
      12,       // revision
       0,       // classname
       0,    0, // classinfo
      14,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   98,    2, 0x08,    1 /* Private */,
       3,    0,   99,    2, 0x08,    2 /* Private */,
       4,    0,  100,    2, 0x08,    3 /* Private */,
       5,    1,  101,    2, 0x08,    4 /* Private */,
       7,    1,  104,    2, 0x08,    6 /* Private */,
      10,    0,  107,    2, 0x08,    8 /* Private */,
      11,    0,  108,    2, 0x08,    9 /* Private */,
      12,    0,  109,    2, 0x08,   10 /* Private */,
      13,    0,  110,    2, 0x08,   11 /* Private */,
      14,    1,  111,    2, 0x08,   12 /* Private */,
      15,    1,  114,    2, 0x08,   14 /* Private */,
      18,    0,  117,    2, 0x08,   16 /* Private */,
      19,    1,  118,    2, 0x08,   17 /* Private */,
      21,    0,  121,    2, 0x08,   19 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    6,
    QMetaType::Void, 0x80000000 | 8,    9,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    6,
    QMetaType::Void, 0x80000000 | 16,   17,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,   20,
    QMetaType::Void,

       0        // eod
};

Q_CONSTINIT const QMetaObject DxDiagWidget::staticMetaObject = { {
    QMetaObject::SuperData::link<QWidget::staticMetaObject>(),
    qt_meta_stringdata_ZN12DxDiagWidgetE.offsetsAndSizes,
    qt_meta_data_ZN12DxDiagWidgetE,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_tag_ZN12DxDiagWidgetE_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<DxDiagWidget, std::true_type>,
        // method 'onGenerateClicked'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onWorkerStarted'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onWorkerFinished'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onWorkerError'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QString &, std::false_type>,
        // method 'onParsingFinished'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QList<DxDiagSectionData> &, std::false_type>,
        // method 'onWorkerThreadFinished'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onSearchRequirementsClicked'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onGameSearchStarted'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onGameSearchFinished'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onGameSearchError'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QString &, std::false_type>,
        // method 'onGameSearchFinishedWithResults'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const GameRequirements &, std::false_type>,
        // method 'onGameSearchThreadFinished'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onGameNameFound'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QString &, std::false_type>,
        // method 'performComparison'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };

void DxDiagWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    auto *_t = static_cast<DxDiagWidget *>(_o);
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: _t->onGenerateClicked(); break;
        case 1: _t->onWorkerStarted(); break;
        case 2: _t->onWorkerFinished(); break;
        case 3: _t->onWorkerError((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1]))); break;
        case 4: _t->onParsingFinished((*reinterpret_cast< std::add_pointer_t<QList<DxDiagSectionData>>>(_a[1]))); break;
        case 5: _t->onWorkerThreadFinished(); break;
        case 6: _t->onSearchRequirementsClicked(); break;
        case 7: _t->onGameSearchStarted(); break;
        case 8: _t->onGameSearchFinished(); break;
        case 9: _t->onGameSearchError((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1]))); break;
        case 10: _t->onGameSearchFinishedWithResults((*reinterpret_cast< std::add_pointer_t<GameRequirements>>(_a[1]))); break;
        case 11: _t->onGameSearchThreadFinished(); break;
        case 12: _t->onGameNameFound((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1]))); break;
        case 13: _t->performComparison(); break;
        default: ;
        }
    }
    if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType(); break;
        case 4:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType(); break;
            case 0:
                *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType::fromType< QList<DxDiagSectionData> >(); break;
            }
            break;
        }
    }
}

const QMetaObject *DxDiagWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *DxDiagWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ZN12DxDiagWidgetE.stringdata0))
        return static_cast<void*>(this);
    return QWidget::qt_metacast(_clname);
}

int DxDiagWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    }
    if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    }
    return _id;
}
QT_WARNING_POP
